import net.minecraftforge.gradle.common.util.ModConfig
import net.minecraftforge.gradle.common.util.RunConfig

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'

version = mod_version
group = "de.melanx.defaultworldtype"
archivesBaseName = "defaultworldtype-${mc_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings("snapshot", mappings_version)
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    createRunConfig("client")
    createRunConfig("server")
}

def createRunConfig(String name, Closure extra = {}) {
    minecraft.runs.create(name) { RunConfig run ->
        run.workingDirectory project.file("run_" + name)
        run.property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
        run.jvmArg "-Dmixin.env.disableRefMap=true"
        run.property "forge.logging.console.level", "info"
        run.mods.create("defaultworldtype") { ModConfig mod ->
            source sourceSets.main
        }
    }.with(extra)
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "defaultworldtype",
                "Specification-Vendor"    : "MelanX",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "MelanX",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}